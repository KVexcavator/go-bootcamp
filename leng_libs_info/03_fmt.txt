Форматирование вывода
==================================================
Подробнее на странице https://golang.org/pkg/fmt/
Самый простой способ вывести что-нибудь в Go — использовать функцию
fmt.Println() или fmt.Printf() .
Основное различие между функциями fmt.Print() и fmt.Println() заключается в том, что последняя при каждом вызове автоматически добавляет в конец вывода символ новой строки.
==================================================
Существует семейство F-функций, в которое входят функции
fmt.Fprintln() , fmt.Fprint() и fmt.Fprintf() . Они используются для записи
в файлы с помощью io.Writer .
--------------------------------------------------
fmt.Scanln() читает пользовательский ввод, передает его строковой переменной, которая передается как указатель.
==================================================
Форматирование:
fmt.Printf("About one-third: %0.2f\n", 1.0/3.0)
возвращает но не выводит
resultString := fmt.Sprintf("About one-third: %0.2f\n", 1.0/3.0)
fmt.Printf(resultString)
форматирование значения ошибки
err := fmt.Errorf("a height of %0.2f is invalid", -2.33333)

%0.2f глагол форматирования
0.2 ширина значений
fmt.Printf("The %s cost %d cents each.\n", "gumballs", 23)
fmt.Printf("That will be $%f please.\n", 0.23 * 5)
в конец каждой форматной строки включается символ новой строки в виде служебной последовательности \n

Глагол    Вывод
%f        Число с плавающей точкой
%d        Десятичное целое число
%s        Строка
%v        Произвольное значение (подходящий формат выбирается на основании типа передаваемого значения)
%#v       Произвольное значение, отформатированное в том виде, в котором
оно отображается в коде Go
%T        Тип переданного значения (int, string и т. п.)
%t        Логическое значение (true или false)
%%        Знак процента (литерал)

Примеры:
fmt.Printf("A float: %f\n", 3.1415)
fmt.Printf("An integer: %d\n", 15)
fmt.Printf("A string: %s\n", "hello")
fmt.Printf("A boolean: %t\n", false)
fmt.Printf("Values: %v %v %v\n", 1.2, "\t", true)
fmt.Printf("Values: %#v %#v %#v\n", 1.2, "\t", true)
fmt.Printf("Types: %T %T %T\n", 1.2, "\t", true)
fmt.Printf("Percent sign: %%\n")

Форматирование значений ширины
Минимальная ширина может задаваться после знака процента в глаголе форматирования. Если аргумент, соответствующий этому глаголу, короче минимальной длины, значение дополняется пробелами до достижения минимальной ширины.
Пример форматирования в таблице
fmt.Printf("%12s | %s\n", "Product", "Cost in Cents")
fmt.Println("-----------------------------")
fmt.Printf("%12s | %2d\n", "Stamps", 50)
fmt.Printf("%12s | %2d\n", "Paper Clips", 5)
fmt.Printf("%12s | %2d\n", "Tape", 99)
Ширина дробной части задаётся после точки
fmt.Printf("%%7.1f: %7.1f\n", 12.3456)
fmt.Printf("%%.1f: %.1f\n", 12.3456)
