text/template пакент для работы с шаблонами строки
go doc text/template

template.New возвращает указательн а новое значение template

template.Parse загружает текст из переданного фргумента

template.Execute передает в приемник для записи и вывода, это модет быть вывод в терминал os.Stdout или в разметку http.ResponseWriter. Во втором параметре метода Execute значения Template передаются данные для вставки в шаблон. Его типом является пустой интерфейс, это означает, что передавать можно значение любого типа.
err = tmpl.Execute(os.Stdout, nil) - здесь ничего не передается
Чтобы вставить данные в шаблон, следует добавить действия (actions) в текст шаблона. Действия обозначаются двойными фигурными скобками {{ }}. В двойных фигурных скобках указываются данные, которые необходимо вставить, или операция, которая должна быть выполнена шаблоном. Каждый раз, когда в шаблоне обнаруживается действие, происходит обработка его содержимого, а результат вставляется в текст шаблона на место действия.
Внутри действия вы можете обращаться к значению данных, переданных методу Execute, в форме "."(точка).
templateText := "Template start\nAction: {{.}}\nTemplate end\n"
tmpl, err := template.New("test").Parse(templateText)
check(err)
err = tmpl.Execute(os.Stdout, "ABC")
вернет:
Template start
Action: ABC
Template end
c if "." включается в вывод только в том случае, если значение "." истинно.
{{if .}}Dot is true!{{end}}
Часть шаблона между действием {{range}} и соответствующим маркером
{{end}} повторяется для каждого значения в массиве, сегменте, ассоциативном
массиве или канале.
Before loop: {{.}}\n{{range .}}In loop: {{.}}\n{{end}}After loop: {{.}}\n
Если действию {{range}} передается пустое значение или nil, цикл не будет выполняться вообще.
Вставка полей структуры в шаблон
Name: {{.Name}}\nCount: {{.Count}}\n
Поле Name выводится в любом случае, но действие {{if}} используется для вывода поля Rate только в том случае, если поле Active содержит true.
Name: {{.Name}}\n{{if .Active}}Rate: ${{.Rate}}\n{{end}}
